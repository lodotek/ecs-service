{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Creates a service / task def for sample play",

  "Parameters": {
    "ClusterStackName": {
      "Description": "Name of an active CloudFormation stack that contains an ECS cluster",
      "Type": "String",
      "MinLength" : 1,
      "MaxLength" : 255,
      "AllowedPattern" : "^[a-zA-Z][-a-zA-Z0-9]*$"
    },
    "Env": {
      "Type": "String",
      "Description": "Name of Environment",
      "MinLength": "3"
    },
    "SubnetIds": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "Subnets in which load balancer will run"
    },
    "AppName": {
      "Type": "String",
      "Description": "Name of app (should have an existing ECR Registry with same name"
    },
    "AppVersion": {
      "Type": "String",
      "Description": "Version label of app",
      "Default": "latest"
    },
    "AppContainerPort": {
      "Type": "Number",
      "Description": "Port the app runs on in the image",
      "Default": "9000"
    },
    "AppDesiredCount": {
      "Type": "Number",
      "Description": "Number of instances of the service to run",
      "Default": "0"
    },
    "AppMaxCount": {
      "Type": "Number",
      "Description": "Max number of instances of the service to scale out to",
      "Default": "1"
    },
    "AppMinCount": {
      "Type": "Number",
      "Description": "Min number of instances of the service to scale in to",
      "Default": "0"
    },
    "AutoScaleHighThreshold": {
      "Type": "Number",
      "Description": "Percentage of service memory utilization that is considered high",
      "Default": "55"
    },
    "AutoScaleLowThreshold": {
      "Type": "Number",
      "Description": "Percentage of service memory utilization that is considered low",
      "Default": "30"
    },
    "LogRetention":{
      "Type": "Number",
      "Description": "Number of days to retain logs in CWL",
      "Default": "14"
    }
  },
  "Resources" : {
    "ALBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ALB Security Group",
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${ClusterStackName}-VpcId"
          }
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "TargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 10,
        "HealthCheckPath": "/health",
        "HealthyThresholdCount": 4,
        "Matcher": {
          "HttpCode": "200"
        },
        "Name": {
          "Ref": "AWS::StackName"
        },
        "Port": 9000,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "20"
          }
        ],
        "UnhealthyThresholdCount": 3,
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${ClusterStackName}-VpcId"
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "ECS Target Group - ${AWS::StackName}"
            }
          }
        ]
      }
    },
    "AppLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "Subnets": {
          "Ref": "SubnetIds"
        },
        "LoadBalancerAttributes": [
          {
            "Key": "idle_timeout.timeout_seconds",
            "Value": "50"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "ALBSecurityGroup"
          },
          {
            "Fn::ImportValue": {
              "Fn::Sub": "${ClusterStackName}-LB-SecurityGroupId"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "ECS ALB - ${AWS::StackName}"
            }
          }
        ]
      }
    },
    "Listener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "TargetGroup"
            }
          }
        ],
        "LoadBalancerArn": {
          "Ref": "AppLoadBalancer"
        },
        "Port": "80",
        "Protocol": "HTTP"
      }
    },
    "EcsTaskRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
        ]
      }
    },
    "TaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Name": {
              "Ref": "AppName"
            },
            "Image": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ".dkr.ecr.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".amazonaws.com/",
                  {
                    "Ref": "AppName"
                  },
                  ":",
                  {
                    "Ref": "AppVersion"
                  }
                ]
              ]
            },
            "Cpu": "50",
            "PortMappings": [
              {
                "ContainerPort": {
                  "Ref": "AppContainerPort"
                },
                "HostPort": 0
              }
            ],
            "Command": [
              "-Dplay.crypto.secret='testsecret'"
            ],
            "Memory": "500",
            "Essential": "true",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "LogGroup"
                },
                "awslogs-region": {
                  "Ref": "AWS::Region"
                },
                "awslogs-stream-prefix": {
                  "Ref": "Env"
                }
              }
            }
          }
        ],
        "Volumes": [],
        "Family": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "Env"
              },
              {
                "Ref": "AppName"
              }
            ]
          ]
        },
        "TaskRoleArn": {
          "Ref": "EcsTaskRole"
        }
      }
    },
    "Service": {
      "Type": "AWS::ECS::Service",
      "DependsOn": [
        "Listener",
        "LogGroup"
      ],
      "Properties": {
        "Role" : {"Fn::ImportValue": {"Fn::Sub": "${ClusterStackName}-EcsServiceRole"}},
        "TaskDefinition": {
          "Ref": "TaskDefinition"
        },
        "DesiredCount": {
          "Ref": "AppDesiredCount"
        },
        "LoadBalancers": [
          {
            "TargetGroupArn": {
              "Ref": "TargetGroup"
            },
            "ContainerPort": {
              "Ref": "AppContainerPort"
            },
            "ContainerName": {
              "Ref": "AppName"
            }
          }
        ],
        "Cluster": {
          "Fn::ImportValue": {
            "Fn::Sub": "${ClusterStackName}-ClusterName"
          }
        }
      }
    },
    "LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": {
          "Ref": "LogRetention"
        },
        "LogGroupName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "Env"
              },
              {
                "Ref": "AppName"
              }
            ]
          ]
        }
      },
      "DeletionPolicy": "Retain"
    },
    "EcsAutoScaleRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "application-autoscaling.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceAutoscaleRole"
        ]
      }
    },
    "ScalableTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": {
          "Ref": "AppMaxCount"
        },
        "MinCapacity": {
          "Ref": "AppMinCount"
        },
        "ResourceId": {
          "Fn::Join": [
            "/",
            [
              "service",
              {
                "Fn::ImportValue": {
                  "Fn::Sub": "${ClusterStackName}-ClusterName"
                }
              },
              {
                "Fn::GetAtt": [
                  "Service",
                  "Name"
                ]
              }
            ]
          ]
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "EcsAutoScaleRole",
            "Arn"
          ]
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs"
      }
    },
    "ScaleUpPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::GetAtt": [
                  "Service",
                  "Name"
                ]
              },
              "ScaleUpPolicy"
            ]
          ]
        },
        "PolicyType": "StepScaling",
        "ScalingTargetId": {
          "Ref": "ScalableTarget"
        },
        "StepScalingPolicyConfiguration": {
          "AdjustmentType": "PercentChangeInCapacity",
          "Cooldown": 60,
          "MetricAggregationType": "Average",
          "StepAdjustments": [
            {
              "MetricIntervalLowerBound": 0,
              "MetricIntervalUpperBound": 10,
              "ScalingAdjustment": 10
            },
            {
              "MetricIntervalLowerBound": 10,
              "ScalingAdjustment": 30
            }
          ]
        }
      }
    },
    "ScaleDownPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::GetAtt": [
                  "Service",
                  "Name"
                ]
              },
              "ScaleDownPolicy"
            ]
          ]
        },
        "PolicyType": "StepScaling",
        "ScalingTargetId": {
          "Ref": "ScalableTarget"
        },
        "StepScalingPolicyConfiguration": {
          "AdjustmentType": "PercentChangeInCapacity",
          "Cooldown": 60,
          "MetricAggregationType": "Average",
          "StepAdjustments": [
            {
              "MetricIntervalLowerBound": -10,
              "MetricIntervalUpperBound": 0,
              "ScalingAdjustment": -10
            },
            {
              "MetricIntervalUpperBound": -10,
              "ScalingAdjustment": -30
            }
          ]
        }
      }
    },
    "MemUtilAlarmHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Memory utilization alarm for ECS service for high mem usage",
        "AlarmActions": [
          {
            "Ref": "ScaleUpPolicy"
          }
        ],
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "Statistic": "Average",
        "Period": "60",
        "EvaluationPeriods": "2",
        "Threshold": {
          "Ref": "AutoScaleHighThreshold"
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "ClusterName",
            "Value": {
              "Fn::ImportValue": {
                "Fn::Sub": "${ClusterStackName}-ClusterName"
              }
            }
          },
          {
            "Name": "ServiceName",
            "Value": {
              "Fn::GetAtt": [
                "Service",
                "Name"
              ]
            }
          }
        ]
      }
    },
    "MemUtilAlarmLow": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Memory utilization alarm for ECS service for low mem usage",
        "AlarmActions": [
          {
            "Ref": "ScaleDownPolicy"
          }
        ],
        "MetricName": "MemoryUtilization",
        "Namespace": "AWS/ECS",
        "Statistic": "Average",
        "Period": "60",
        "EvaluationPeriods": "2",
        "Threshold": {
          "Ref": "AutoScaleLowThreshold"
        },
        "ComparisonOperator": "LessThanThreshold",
        "Dimensions": [
          {
            "Name": "ClusterName",
            "Value": {
              "Fn::ImportValue": {
                "Fn::Sub": "${ClusterStackName}-ClusterName"
              }
            }
          },
          {
            "Name": "ServiceName",
            "Value": {
              "Fn::GetAtt": [
                "Service",
                "Name"
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs" : {
    "Service" : {
      "Description": "The name of the ECS service created",
      "Value" : { "Fn::GetAtt" : [ "Service", "Name" ]},
      "Export" : {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-ServiceName"
        }
      }
    },
    "TaskFamily": {
      "Description": "The family of the task created for the service",
      "Value": {"Fn::Join": ["-", [{"Ref": "Env"}, {"Ref": "AppName"}]]}
    },
    "TaskArn": {
      "Description": "The ARN of the task created for the service",
      "Value": { "Ref" : "TaskDefinition"}
    },
    "LoadBalancerDNS": {
      "Description": "The dns name of the app load balancer for the service",
      "Value": { "Fn::GetAtt": ["AppLoadBalancer", "DNSName"]},
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-LoadBalancerDNSName"
        }
      }
    },
    "LoadBalancer": {
      "Description": "The ARN of the app load balancer for the service",
      "Value": {"Ref": "AppLoadBalancer"}
    },
    "LogGroup": {
      "Description": "The name of the log group created for the app",
      "Value": {"Ref": "LogGroup"},
      "Export" : {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-LogGroupName"
        }
      }
    }
  }
}
